#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp LG(BACKSPACE)>;
            key-positions = <16 30>;
        };

        langswitch {
            bindings = <&kp LG(SPACE)>;
            key-positions = <34 22>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <17 31>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <16 18>;
        };

        vvv {
            bindings = <&kp LS(LA(LG(V)))>;
            key-positions = <41 43>;
        };

        whisper {
            bindings = <&kp LS(LA(LC(LG(I))))>;
            key-positions = <41 42 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC            &kp N1     &kp N2        &kp N3            &kp N4  &kp N5         &kp UP_ARROW     &kp N6     &kp N7  &kp N8         &kp N9         &kp N0             &kp BACKSPACE
&kp RIGHT_BRACKET  &kp Q      &kp W         &kp E             &kp R   &kp T          &kp DOWN_ARROW   &kp Y      &kp U   &kp I          &kp O          &kp P              &kp LEFT_BRACKET
&kp TAB            &kp A      &kp S         &kp D             &kp F   &kp G          &kp LEFT_ARROW   &kp H      &kp J   &kp K          &kp L          &kp SEMI           &kp APOS
&kp LSHFT          &kp Z      &kp X         &kp C             &kp V   &kp B          &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA      &kp DOT        &kp SLASH          &kp MINUS
&kp C_MUTE         &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 2   &lt 0 ENTER    &kp ENTER        &kp SPACE  &mo 1   &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans            &trans      &trans                    &trans     &trans         &trans               &kp LG(PLUS)     &trans         &trans        &trans    &trans         &trans             &kp BACKSPACE
&kp C_SLEEP_MODE  &kp INSERT  &kp LC(LS(LA(NUMBER_9)))  &trans     &kp DELETE     &trans               &kp LG(MINUS)    &kp PAGE_UP    &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp LA(BACKSPACE)  &kp LG(BACKSPACE)
&kp TAB           &kp LALT    &kp LEFT_GUI              &kp LSHFT  &kp LC(LS(E))  &kp CAPSLOCK         &mmv MOVE_LEFT   &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT      &kp DELETE         &trans
&kp LSHFT         &kp LG(Z)   &kp LG(X)                 &kp LG(C)  &kp LG(V)      &kp LG(LA(SPACE))    &mmv MOVE_RIGHT  &trans         &kp HOME      &trans    &kp END        &trans             &trans
&kp C_MUTE        &kp LCTRL   &kp LALT                  &kp LGUI   &mo 0          &trans               &mkp LCLK        &kp SPACE      &kp LGUI      &kp LALT  &kp LCTRL      &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &kp F1      &kp F2      &kp F3         &kp F4        &kp F5          &kp LG(PLUS)     &kp F6      &kp F7      &kp F8      &kp F9        &kp F10     &kp F11
&kp GRAVE  &kp N1      &kp N2      &kp N3         &kp N4        &kp N5          &kp LG(MINUS)    &kp N6      &kp N7      &kp N8      &kp N9        &kp N0      &kp F12
&kp TAB    &kp LS(N1)  &kp LS(N2)  &kp LS(N3)     &kp LS(N4)    &kp LS(N5)      &mmv MOVE_LEFT   &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)    &kp LS(N0)  &kp PIPE
&kp LSHFT  &kp EQUAL   &kp MINUS   &kp LS(EQUAL)  &kp LS(LBKT)  &kp LS(RBKT)    &mmv MOVE_RIGHT  &kp LBKT    &kp RBKT    &kp SEMI    &kp LS(SEMI)  &kp BSLH    &kp LSHFT
&trans     &kp LCTRL   &kp LALT    &kp LGUI       &trans        &kp ENTER       &mkp LCLK        &kp SPACE   &mo 0       &kp LGUI    &kp LALT      &kp LCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
